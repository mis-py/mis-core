name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run pytests
    runs-on: ubuntu-latest
    container: python:3.12.6

    services:
      redis:
        image: redis:7.0.10-alpine
      postgres:
        image: postgres:15.2-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mis_test
      rabbitmq:
        image: rabbitmq:3.11.13-alpine
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: mongodb
          MONGO_INITDB_ROOT_PASSWORD: mongodb
          MONGO_INITDB_DATABASE: mis

    steps:
    - uses: actions/checkout@v4
    
#    - name: Set up Python 3.12.6
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.12.6
        #cache: 'pip'

    - uses: actions/cache@v4
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip setuptools wheel httpx pytest pytest-md pytest-emoji pytest-dotenv pytest-asyncio
        python -m pip install -r requirements.txt

    - uses: pavelzw/pytest-action@v2
      with:
        emoji: false
        verbose: false
        job-summary: true
      env: 
        ENVIRONMENT: TEST

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ vars.IMAGE_NAME }}:$(date +%s)
  
  security:
    name: Check for vulnerabilities
    runs-on: ubuntu-latest

    steps:
      - name: Placeholder
      # https://github.com/docker/scout-action
